# Завдання 1

# Потрібно розробити програму, яка імітує приймання й обробку заявок: 
# програма має автоматично генерувати нові заявки (ідентифіковані унікальним номером або іншими даними),
# додавати їх до черги, а потім послідовно видаляти з черги для "обробки", імітуючи таким чином роботу сервісного центру.

# Ось псевдокод для завдання з використанням черги (Queue з модуля queue в Python) для системи обробки заявок:

# import Queue

# Створити чергу заявок
# queue = Queue()

# Функція generate_request():
#     Створити нову заявку
#     Додати заявку до черги

# Функція process_request():
#     Якщо черга не пуста:
#         Видалити заявку з черги
#         Обробити заявку
#     Інакше:
#         Вивести повідомлення, що черга пуста

# Головний цикл програми:
#     Поки користувач не вийде з програми:
#         Виконати generate_request() для створення нових заявок
#         Виконати process_request() для обробки заявок

# У цьому псевдокоді використовуються дві основні функції: 
# generate_request(), яка генерує нові заявки та додає їх до черги,
# та process_request(), яка обробляє заявки, видаляючи їх із черги. 
# Головний цикл програми виконує ці функції, імітуючи постійний потік нових заявок та їх обробку.


import queue
import random
import time

# Створити чергу заявок
request_queue = queue.Queue()

def generate_request():
    # Створити нову заявку
    request_id = random.randint(1000, 9999)
    print(f"Заявка {request_id} додана до черги.")
    # Додати заявку до черги
    request_queue.put(request_id)

def process_request():
    if not request_queue.empty():
        # Видалити заявку з черги
        request_id = request_queue.get()
        print(f"Заявка {request_id} обробляється.")
        # Імітація обробки заявки
        time.sleep(2)
        print(f"Заявка {request_id} оброблена.")
    else:
        print("Черга пуста.")

# Головний цикл програми
try:
    while True:
        generate_request()
        process_request()
        time.sleep(1)
except KeyboardInterrupt:
    print("Програма завершена.")
